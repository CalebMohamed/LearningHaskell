whatIsATypeclass = "it is a set of types that all support and implement the behaviour that the typeclass describes."
canYouGiveSomeExamplesOfATypeClass = "if we look at the type of (==) - the () is needed to evaluate its type with :t - its has type :: (Eq a) => a -> a -> Bool. => signifies the preceding expression is a class constraint, that is that all inputs have to meet those conditions. So (Eq a) => means that the inputs have to be within the Eq typeclass - which is the set of types can be evaluated for equality."
whatAreSomeOtherTypeClasses = "Ord - the types that can be ordered, such that they are GT, LT, or EQ (>, < or == respectively), as you can infer Ord is a subset of Eq as a type must be equatable to be orderable. Show - types that can be represented as strings (show 3 -> str(3) read str(3) + 2 -> 5)."
whatAreSomePitfallsWithRead = "if you try read str(4), it throws an error because the desired type is unclear, do we want an Int, Integer, Float, Double...? Previously GHCI could infer, because we summed it with another integer. To clarify we can use type annotations."
whatAreTypeAnnotations = "these are ways of explicitely typing our expressions. read str(5) :: Int -> 5, read str(5) :: Float -> 5.0, read str([1,2,3,4]) :: [Int] - > [1,2,3,4], read str( (3, 'a') ) :: (Int, Char) -> (3, 'a')"
evenMoreTypeClasses = "Enum - the types that can be enumerated, consequently we can use list ranges, and they have defined successors and predecesors. Bounded - types with an upper and lower bound. Num - the types that can act like numbers (5::Int)*(6::Integer) results in an error, but 5*(6::Integer) doesnt because 5 is within the Num typeclass and can act like an Integer. Integral - types that can act like integers. Floating - types that can act like floating point numbers."
showMeAnExampleTyingTheseTypeclassIdeasTogether = "the fromIntegral function has the following type declaration: fromIntegral :: (Num b, Integral a) => a -> b. This shows that it generalised an Integral type to a more general Num type so that you can then use it with the Floating numbers. This is often used to allow integral functions to work with Floating numbers."