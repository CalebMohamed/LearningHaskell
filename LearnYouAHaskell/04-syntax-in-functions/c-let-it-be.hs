whatIsALetBinding = "a let binding is local binding of values to names which can be used in a corresponding in clause, consequently they have a more controlled scope than where clauses"
howExactlyDoesLetDifferFromWhere = "where is syntactical constructs where lets are actual expressions, and lets precede their expressions while where succeed theirs."
usingLetsInListComprehensions = "lets can be used anywhere as long as you use the appropriate in expression which results in a correct type in its place. However, in list comprehensions you can place a let in the predicate without using an in and referencing it in the output function or following sections and predicates to do some snazy stuff: calcDensities xs = [density | (m,v) <- xs, let density = m / v, density < 1.2], if we used in the result of the expression would replace the let and it would not be possible to reference it by name in other predicates and the output"