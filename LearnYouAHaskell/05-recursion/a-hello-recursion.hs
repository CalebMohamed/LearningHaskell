whatIsRecursionAndWhyDontWeHaveLoops = "recursion is where a function definition calls itself in some cases, consequently it should have a base case at which the calling terminates and returns a value, and it is often used to solve problems via divide and conquer. Functional languages declare what something is instead of how you get it so you can't loop until you reach a theoretical solution, you must define the solution even if you haven't done the computation and will have to do it recursively until the base case."